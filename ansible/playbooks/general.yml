- name: general playbook
  hosts: all
  become: yes # makes root
  tasks:
    - name: (step 4) Set up multiple authorized keys #setup ssh on vagrant machines
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', item) }}"
      loop: "{{ query('fileglob', '../public_keys/*.pub') }}"

    - name: (step 5 1/2) turn off swap
      ansible.builtin.shell:
        cmd: swapoff -a

    - name: (step 5 2/2) comment out swap line
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: "^.*swap.*$"
        state: absent

    - name: (step 6 1/2) create k8conf
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
        owner: root
        group: root
        mode: "0644"

    - name: (step 6 2/2) Load kernel modules
      ansible.builtin.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

      # Set ip forwarding on in /proc and in the sysctl file and reload if necessary
    - name: (step 7) set up sysctl configuration
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: true
        state: present
        reload: true
      loop: "{{ sysctl_vars | dict2items }}"
      vars:
        sysctl_vars:
          net.ipv4.ip_forward: 1
          net.ipv6.conf.all.forwarding : 1
          net.bridge.bridge-nf-call-iptables: 1
          net.bridge.bridge-nf-call-ip6tables: 1

    - name: (step 8 1/1) set host IPs #could be done dynamically for extra points
      template:
        src: ../templates/hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: "0644"

    - name: (step 9) add kubernetes key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: present

    - name: Kubernetes to list
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
        state: present
        update_cache: true

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true

    # cant get specific versions containerd=1.7.24 working would appreciate if someone could take a look
    - name: Install a list of packages
      ansible.builtin.apt:
        pkg:
          - "containerd=1.7.24-*"
          - "runc=1.1.12-*"
          - "kubeadm=1.32.4-*"
          - "kubelet=1.32.4-*"
          - "kubectl=1.32.4-*"

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: "0755"

    - name: Create containerd config file
      ansible.builtin.shell:
        cmd: containerd config default > /etc/containerd/config.toml

    - name: Disable apparmor in containerd config
      ansible.builtin.lineinfile:
        path: "/etc/containerd/config.toml"
        state: present
        regexp: "    disable_apparmor = false"
        line: "    disable_apparmor = true"

    - name: Change the default pause sandbox image in containerd config
      ansible.builtin.lineinfile:
        path: "/etc/containerd/config.toml"
        state: present
        regexp: '    sandbox_image = "registry.k8s.io/pause:3.8"'
        line: '    sandbox_image = "registry.k8s.io/pause:3.10"'

    - name: Enable SystemdCgroup in containerd config
      ansible.builtin.lineinfile:
        path: "/etc/containerd/config.toml"
        state: present
        regexp: "            SystemdCgroup = false"
        line: "            SystemdCgroup = true"

    - name: Restart service containerd, in all cases
      ansible.builtin.service:
        name: containerd
        state: restarted

    - name: start kubelet
      ansible.builtin.systemd:
        name: kubelet
        enabled: true
        state: started
